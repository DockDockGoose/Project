version: "3.9"
   
services:
  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'dockdockgoose'
      MONGO_INITDB_DATABASE: 'mongodb'
    command: mongod --auth
    volumes:
      - .mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./data-db:/data/db
    ports: 
      - 27017:27017
    networks: 
      - localnet

  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - 8081:8081
    volumes:
      - ./data-db
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_BASICAUTH_USERNAME: 'admin'
      ME_CONFIG_MONGODB_BASICAUTH_PASSWORD: 'duck'
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'dockdockgoose'
    depends_on: 
      - mongodb
    links:
      - mongodb
    networks: 
      - localnet

  web:
    build: .
    restart: always
    container_name: web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    links:
      - mongodb
    depends_on:
      - migration
    networks: 
      - localnet

  migration:
    container_name: migration
    build: .
    command: python manage.py migrate
    volumes:
      - .:/code
    links:
      - mongodb
    depends_on:
      - makemigrations
    networks: 
      - localnet
      
  makemigrations:
    container_name: makemigrations
    build: .
    command: python manage.py makemigrations
    volumes:
      - .:/code
    links:
      - mongodb
    depends_on:
      - mongodb
    networks:
      - localnet

networks:
  localnet:
    driver: 'bridge'