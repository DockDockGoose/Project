version: "3.9"
   
services:
  web:
    build:
      context: ./stocksite
      dockerfile: Dockerfile.prod
    image: stocksite-webapp     # Specify name & tag for the image that is built
    command: gunicorn stocksite.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - "8000"
    env_file: 
      - ./.env.prod
    depends_on: 
      - mongo
    networks: 
      - localnet

  mongo:
    image: mongo
    restart: always
    command: --quiet
    volumes:
      - .mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - data-db:/data/db
    env_file: 
      - ./.env.prod.db
    networks: 
      - localnet
    ports: 
      - "27018:27017"    # Remove for security - (only used for collecting logs from the dockerized database)


  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - "8081:8081"
    volumes:
      - data-db:/data/db
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongo'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_BASICAUTH_USERNAME: 'admin'
      ME_CONFIG_MONGODB_BASICAUTH_PASSWORD: 'duck'
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'dockdockgoose'
    depends_on: 
      - mongo
    links:
      - mongo
    networks: 
      - localnet

  nginx:
    build: ./nginx
    image: stocksite-nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - "80:80"
    depends_on:
      - web
    networks: 
      - localnet

volumes:
  data-db:
  static_volume:

networks:
  localnet:
    driver: 'bridge'