version: "3.9"

services:
    # proxy:
    #     ports:
    #       - "80:80"
    #       - "8090:8080"
    #     command:
    #       # Enable Docker in Traefik, so that it reads labels from Docker services
    #       - --providers.docker
    #       # Add a constraint to only use services with the label for this stack
    #       # from the env var TRAEFIK_TAG
    #       - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
    #       # Do not expose all Docker services, only the ones explicitly exposed
    #       - --providers.docker.exposedbydefault=false
    #       # Disable Docker Swarm mode for local development
    #       # - --providers.docker.swarmmode
    #       # Enable the access log, with HTTP requests
    #       - --accesslog
    #       # Enable the Traefik log, for configurations and errors
    #       - --log
    #       # Enable the Dashboard and API
    #       - --api
    #       # Enable the Dashboard and API in insecure mode for local development
    #       - --api.insecure=true
        # labels:
        #   - traefik.enable=true
        #   # - traefik.http.routers.fastapi.rule=Host(`fastapi.localhost`)
        #   - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
        #   - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80


    backend:
        ports:
          - "80:8000"
          # - "8000:8888"
        volumes:
          - ./backend/app:/app
        # environment:
        #   - SERVER_HOST=http://${DOMAIN?Variable not set}
        build:
          context: ./backend
          dockerfile: backend.Dockerfile
        # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
        # command: gunicorn --bind :8000 --workers 1 --threads 8 main:app --worker-class uvicorn.workers.UvicornH11Worker --preload --timeout 60
        command:  gunicorn app.main:app --bind 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker
        # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

        depends_on:
          - mongo
        # labels:
        #   - traefik.enable=true
        #   - traefik.constraint-label-stack=${TRAEFIK_TAG?Variable not set}
        #   - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
        #   - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80


    mongo:
      image: mongo
      restart: always
      # command: --quiet
      volumes:
        - ./backend/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        - data-db:/data/db
      env_file: 
        - .env
      ports: 
        - "27017:27017"

volumes:
  data-db:

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
